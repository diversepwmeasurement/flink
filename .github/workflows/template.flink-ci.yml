env:
  CONTAINER_LOCAL_WORKING_DIR: /root/flink
  DOCKER_IMAGES_CACHE_FOLDER: /root/.docker-cache
  FLINK_ARTIFACT_DIR: /root/artifact-directory
  FLINK_ARTIFACT_FILENAME: flink_artifacts.tar.gz
  MAVEN_ARGS: -Dmaven.repo.local=/root/.m2/repository
  MAVEN_REPO_FOLDER: /root/.m2/repository
  MOUNTED_WORKING_DIR: /__w/flink/flink
jobs:
  compile:
    container:
      image: mapohl/flink-ci:FLINK-34194
      options: --init --privileged
    env:
      GHA_JOB_TIMEOUT: 240
    name: Compile
    outputs:
      stringified-workflow-name: ${{ steps.workflow-prep-step.outputs.stringified_value
        }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Flink Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - continue-on-error: true
      name: Initialize job
      uses: ./.github/actions/job_init
      with:
        jdk_version: ${{ inputs.jdk_version }}
        maven_repo_folder: ${{ env.MAVEN_REPO_FOLDER }}
        source_directory: ${{ env.MOUNTED_WORKING_DIR }}
        target_directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      id: workflow-prep-step
      name: Stringify workflow name
      uses: ./.github/actions/stringify
      with:
        value: ${{ github.workflow }}-${{ inputs.workflow-caller-id }}
    - continue-on-error: true
      name: Compile Flink
      timeout-minutes: ${{ fromJSON(env.GHA_JOB_TIMEOUT) }}
      uses: ./.github/actions/run_mvn
      with:
        env: ${{ inputs.environment }}
        maven-parameters: test-compile -Dflink.markBundledAsOptional=false -Dfast
        working_directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      name: Collect build artifacts
      run: './tools/azure-pipelines/create_build_artifact.sh

        '
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      name: Upload artifacts to make them available in downstream jobs
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: build-artifacts-${{ steps.workflow-prep-step.outputs.stringified_value
          }}-${{ github.run_number }}
        path: ${{ env.FLINK_ARTIFACT_DIR }}/${{ env.FLINK_ARTIFACT_FILENAME }}
        retention-days: 1
  e2e:
    env:
      DOCKER_IMAGES_CACHE_FOLDER: ${{ github.workspace }}/.docker-cache
      E2E_CACHE_FOLDER: ${{ github.workspace }}/.e2e-cache
      E2E_TARBALL_CACHE: ${{ github.workspace }}/.e2e-tar-cache
      FLINK_ARTIFACT_DIR: ${{ github.workspace }}
      GHA_JOB_TIMEOUT: 310
      MAVEN_ARGS: -Dmaven.repo.local=${{ github.workspace }}/.m2/repository
      MAVEN_REPO_FOLDER: ${{ github.workspace }}/.m2/repository
    name: E2E (group ${{ matrix.group }})
    needs: compile
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Flink Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - continue-on-error: true
      name: Initialize job
      uses: ./.github/actions/job_init
      with:
        jdk_version: ${{ inputs.jdk_version }}
        maven_repo_folder: ${{ env.MAVEN_REPO_FOLDER }}
    - continue-on-error: true
      name: Install missing packages
      run: sudo apt-get install -y net-tools docker-compose zip
    - continue-on-error: true
      name: Install OpenSSL
      run: 'sudo apt-get install -y bc libapr1

        wget -r --no-parent -nd --accept=libssl1.0.0_*ubuntu5.*_amd64.deb http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/

        sudo apt install ./libssl1.0.0_*.deb

        '
    - continue-on-error: true
      name: Download build artifacts from compile job
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts-${{ needs.compile.outputs.stringified-workflow-name
          }}-${{ github.run_number }}
        path: ${{ env.FLINK_ARTIFACT_DIR }}
    - continue-on-error: true
      name: Unpack build artifact
      run: ./tools/azure-pipelines/unpack_build_artifact.sh
    - continue-on-error: true
      name: Create cache directories
      run: 'mkdir -p ${{ env.E2E_CACHE_FOLDER }}

        mkdir -p ${{ env.E2E_TARBALL_CACHE }}

        mkdir -p ${{ env.DOCKER_IMAGES_CACHE_FOLDER }}

        '
    - continue-on-error: true
      name: Load E2E files from Cache
      uses: actions/cache@v4
      with:
        key: e2e-cache-${{ matrix.group }}-${{ hashFiles('**/flink-end-to-end-tests/**/*.java',
          '!**/avro/**') }}
        path: ${{ env.E2E_CACHE_FOLDER }}
    - continue-on-error: true
      name: Load E2E artifacts from Cache
      uses: actions/cache@v4
      with:
        key: e2e-artifact-cache-${{ matrix.group }}-${{ hashFiles('**/flink-end-to-end-tests/**/*.sh')
          }}
        path: ${{ env.E2E_TARBALL_CACHE }}
        restore-keys: e2e-artifact-cache-${{ matrix.group }}
    - continue-on-error: true
      id: docker-cache
      name: Try loading Docker images from Cache
      uses: actions/cache@v4
      with:
        key: e2e-${{ matrix.group }}-docker-${{ runner.os }}-${{ hashFiles('**/cache_docker_images.sh',
          '**/flink-test-utils-parent/**/DockerImageVersions.java') }}
        path: ${{ env.DOCKER_IMAGES_CACHE_FOLDER }}
    - continue-on-error: true
      if: ${{ !cancelled() && !steps.docker-cache.cache.hit }}
      name: Load Docker images if not present in Cache, yet
      run: ./tools/azure-pipelines/cache_docker_images.sh load
    - continue-on-error: true
      name: Build Flink
      uses: ./.github/actions/run_mvn
      with:
        env: ${{ inputs.environment }}
        maven-parameters: install -DskipTests -Dfast $PROFILE -Pskip-webui-build
    - continue-on-error: true
      env:
        IT_CASE_S3_ACCESS_KEY: ${{ secrets.s3_access_key }}
        IT_CASE_S3_BUCKET: ${{ secrets.s3_bucket }}
        IT_CASE_S3_SECRET_KEY: ${{ secrets.s3_secret_key }}
      id: test-run
      name: Run E2E Tests
      run: "${{ inputs.environment }} FLINK_DIR=`pwd`/build-target PROFILE=\"$PROFILE\
        \ -Pgithub-actions\" ./tools/azure-pipelines/uploading_watchdog.sh \\\n  flink-end-to-end-tests/run-nightly-tests.sh\
        \ ${{ matrix.group }}\n"
      timeout-minutes: ${{ fromJSON(env.GHA_JOB_TIMEOUT) }}
    - continue-on-error: true
      if: ${{ failure() && steps.test-run.outputs.debug-files-output-dir != '' }}
      name: Upload Logs
      uses: actions/upload-artifact@v4
      with:
        name: logs-e2e-${{ needs.compile.outputs.stringified-workflow-name }}-${{
          github.run_number }}-${{ matrix.group }}-${{ steps.test-run.outputs.debug-files-name
          }}
        path: ${{ steps.test-run.outputs.debug-files-output-dir }}
    - continue-on-error: true
      if: ${{ !cancelled() && (failure() || !steps.docker-cache.cache.hit) }}
      name: Save Docker images to Cache
      run: ./tools/azure-pipelines/cache_docker_images.sh save
    strategy:
      fail-fast: false
      matrix:
        group:
        - 1
        - 2
    timeout-minutes: 310
  packaging:
    container:
      image: mapohl/flink-ci:FLINK-34194
      options: --init --privileged
    name: Test packaging/licensing
    needs: compile
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Flink Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - continue-on-error: true
      name: Initialize job
      uses: ./.github/actions/job_init
      with:
        jdk_version: ${{ inputs.jdk_version }}
        maven_repo_folder: ${{ env.MAVEN_REPO_FOLDER }}
        source_directory: ${{ env.MOUNTED_WORKING_DIR }}
        target_directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      name: Download build artifacts from compile job
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts-${{ needs.compile.outputs.stringified-workflow-name
          }}-${{ github.run_number }}
        path: ${{ env.FLINK_ARTIFACT_DIR }}
    - continue-on-error: true
      name: Unpack build artifact
      run: './tools/azure-pipelines/unpack_build_artifact.sh

        '
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      name: Test
      run: '${{ inputs.environment }} ./tools/ci/compile_ci.sh || exit $?

        '
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
  test:
    container:
      image: mapohl/flink-ci:FLINK-34194
      options: --init --privileged
      volumes:
      - /mnt:/root
    env:
      GHA_JOB_TIMEOUT: 240
    name: 'Test (module: ${{ matrix.module }})'
    needs: compile
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Flink Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - continue-on-error: true
      name: Initialize job
      uses: ./.github/actions/job_init
      with:
        jdk_version: ${{ inputs.jdk_version }}
        maven_repo_folder: ${{ env.MAVEN_REPO_FOLDER }}
        source_directory: ${{ env.MOUNTED_WORKING_DIR }}
        target_directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      name: Set coredump pattern
      run: sudo sysctl -w kernel.core_pattern=core.%p
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      name: Download build artifacts from compile job
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts-${{ needs.compile.outputs.stringified-workflow-name
          }}-${{ github.run_number }}
        path: ${{ env.FLINK_ARTIFACT_DIR }}
    - continue-on-error: true
      name: Unpack build artifact
      run: './tools/azure-pipelines/unpack_build_artifact.sh

        '
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      id: docker-cache
      name: Try loading Docker images from Cache
      uses: actions/cache@v4
      with:
        key: ${{ matrix.module }}-docker-${{ runner.os }}-${{ hashFiles('**/cache_docker_images.sh',
          '**/flink-test-utils-parent/**/DockerImageVersions.java') }}
        path: ${{ env.DOCKER_IMAGES_CACHE_FOLDER }}
        restore-keys: ${{ matrix.module }}-docker-${{ runner.os }}
    - continue-on-error: true
      if: ${{ !cancelled() && !steps.docker-cache.cache.hit }}
      name: Load Docker images if not present in cache, yet
      run: ./tools/azure-pipelines/cache_docker_images.sh load
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      env:
        IT_CASE_S3_ACCESS_KEY: ${{ secrets.s3_access_key }}
        IT_CASE_S3_BUCKET: ${{ secrets.s3_bucket }}
        IT_CASE_S3_SECRET_KEY: ${{ secrets.s3_secret_key }}
      id: test-run
      name: Test - ${{ matrix.module }}
      run: "${{ inputs.environment }} PROFILE=\"$PROFILE -Pgithub-actions\" ./tools/azure-pipelines/uploading_watchdog.sh\
        \ \\\n    ./tools/ci/test_controller.sh ${{ matrix.module }}\n"
      timeout-minutes: ${{ fromJSON(env.GHA_JOB_TIMEOUT) }}
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      if: ${{ always() }}
      name: Post-build Disk Info
      run: df -h
      shell: bash
    - continue-on-error: true
      if: ${{ always() }}
      name: Top 15 biggest directories in terms of used disk space
      run: 'du -ah --exclude="proc" -t100M . | sort -h -r | head -n 15

        '
      shell: bash
    - continue-on-error: true
      name: Post-process build artifacts
      run: find ${{ steps.test-run.outputs.debug-files-output-dir }} -type f -exec
        rename 's/[:<>|*?]/-/' {} \;
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    - continue-on-error: true
      if: ${{ failure() && steps.test-run.outputs.debug-files-output-dir }} != ''
      name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: logs-test-${{ needs.compile.outputs.stringified-workflow-name }}-${{
          github.run_number }}-${{ matrix.stringified-module-name }}-${{ steps.test-run.outputs.debug-files-name
          }}
        path: ${{ steps.test-run.outputs.debug-files-output-dir }}
    - continue-on-error: true
      if: ${{ !cancelled() && (failure() || !steps.docker-cache.cache.hit) }}
      name: Save Docker images to cache
      run: ./tools/azure-pipelines/cache_docker_images.sh save
      working-directory: ${{ env.CONTAINER_LOCAL_WORKING_DIR }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - module: core
          stringified-module-name: core
        - module: python
          stringified-module-name: python
        - module: table
          stringified-module-name: table
        - module: connect
          stringified-module-name: connect
        - module: tests
          stringified-module-name: tests
        - module: misc
          stringified-module-name: misc
name: Apache Flink Test Workflow Template
on:
  repository_dispatch:
    types: trigger-ga___template.flink-ci.yml
permissions: read-all
